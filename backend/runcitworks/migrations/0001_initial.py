# Generated by Django 3.1.5 on 2021-06-09 16:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonthData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('starting_modal', models.DecimalField(decimal_places=4, default=0, max_digits=12)),
                ('cashout', models.DecimalField(decimal_places=4, default=0, max_digits=12)),
                ('profit_balance', models.DecimalField(decimal_places=4, default=0, max_digits=12)),
            ],
            options={
                'ordering': ['-month'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('unit_price', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('monthdata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='runcitworks.monthdata')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runcitworks.product')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('unit_price', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('monthdata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='runcitworks.monthdata')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runcitworks.product')),
            ],
        ),
        migrations.CreateModel(
            name='PreviousBalance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unit_price', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('monthdata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previous_balances', to='runcitworks.monthdata')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='runcitworks.product')),
            ],
        ),
        migrations.AddField(
            model_name='monthdata',
            name='products',
            field=models.ManyToManyField(blank=True, to='runcitworks.Product'),
        ),
        migrations.AddField(
            model_name='monthdata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique_for_month='month'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('name', 'user'), name='unique product name for every user'),
        ),
        migrations.AddConstraint(
            model_name='previousbalance',
            constraint=models.UniqueConstraint(fields=('product', 'monthdata'), name='No Duplicate Previous Balances'),
        ),
        migrations.AddConstraint(
            model_name='monthdata',
            constraint=models.UniqueConstraint(fields=('user', 'month'), name='1 month per user only.'),
        ),
    ]
